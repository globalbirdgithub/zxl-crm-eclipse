<?xml version="1.0" encoding="UTF-8"?>
<web-app xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
	xmlns="http://java.sun.com/xml/ns/javaee"
	xsi:schemaLocation="http://java.sun.com/xml/ns/javaee http://java.sun.com/xml/ns/javaee/web-app_3_0.xsd"
	id="WebApp_ID" version="3.0">
	
  	<display-name>zxl-crm</display-name>
  	<!--会话超时配置，单位分钟-->  
  	<session-config>
        <session-timeout>360</session-timeout>  
    </session-config> 
    <!-- ======================激活Tomcat的defaultServlet来处理静态文件========================== -->
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.css</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.swf</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.gif</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.jpg</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.png</url-pattern>  
    </servlet-mapping>  
    <servlet-mapping>  
        <servlet-name>default</servlet-name>  
        <url-pattern>*.js</url-pattern>  
    </servlet-mapping>  
	<!-- ===========================Spring=========================== -->
	<!-- 配置Spring容器监听器 -->
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	<!-- 指定Spring容器监听器要加载的xml,是web.xml首先加载的标签 -->
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>classpath:applicationContext.xml</param-value>  
	</context-param>
	<!-- =======================SpringMVC======================= -->
	<!-- 字符编码 -->
	<filter>
		<filter-name>CharacterEncodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>UTF-8</param-value>
		</init-param>
		 <init-param>  
            <param-name>forceEncoding</param-name>  
            <param-value>true</param-value>  
        </init-param>
	</filter>
	<filter-mapping>
		<filter-name>CharacterEncodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 配置SpringMVC核心控制器 --> 
	<servlet>
		<servlet-name>dispatcherServlet</servlet-name>
	    <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
		<!-- 指定SpringMVC初始化时要加载的xml -->
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>classpath:applicationContext-mvc.xml</param-value>
		</init-param>
		<load-on-startup>1</load-on-startup>
	</servlet>  
	<servlet-mapping>
		<servlet-name>dispatcherServlet</servlet-name>
		<!-- /表示拦截所有的请求，包括静态资源，例如：/user/add,可以实现现在很流行的REST风格。弊端：会导致静态文件（jpg,js,css）被拦截后不能正常显示。 -->
		<url-pattern>/</url-pattern>
	</servlet-mapping>
	
	<!-- ====================应用程序====================== -->
	<!--指定欢迎页面-->  
	<welcome-file-list>
        <welcome-file>login.jsp</welcome-file>  
    </welcome-file-list> 
    <!--当系统出现404错误，跳转到页面nopage.html-->   
    <error-page> 
        <error-code>404</error-code>  
        <location>/nopage.html</location>  
    </error-page>  
</web-app>
