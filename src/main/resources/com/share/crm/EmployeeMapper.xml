<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.share.crm.mapper.EmployeeMapper">
	 <insert id="insert" parameterType="Employee" useGeneratedKeys="true" keyProperty="id" keyColumn="id">
	 	insert into t_employee(username,realName,password,tel,email,inputTime,state,department_id)
	 		values(#{username},#{realName},#{password},#{tel},#{email},#{inputTime},#{state},#{department.id});
	 </insert>
	 
	 <delete id="delete" parameterType="long">
	 	delete from t_employee 
	 		where id=#{id}
	 </delete>
	 
	 <update id="update" parameterType="Employee">
	 	update t_employee 
	 		set username=#{username},realName=#{realName},password=#{password},tel=#{tel},email=#{email},inputTime=#{inputTime},state=#{state},department_id=#{department.id}
	 			where id=#{id}
	 </update>
	 
	 <select id="get" parameterType="long" resultType="Employee">
	 	select id,username,realName,password,tel,email,inputTime,state,department_id from t_employee 
	 		where id=#{id}
	 </select>
	 
	 <select id="getAll" resultType="Employee">
	 	select id,username,realName,password,tel,email,inputTime,state,department_id from t_employee
	 </select>
	 
	 <select id="findCountByQuery" resultType="int">
	 	select count(id) from t_employee e
	 		<include refid="whereSql"/>
	 </select>
	 
	 <select id="findByQuery" parameterType="EmployeeQuery" resultMap="employeeResultMap">
	 	select e.id,e.username,e.realName,e.password,e.tel,e.email,e.inputTime,e.state,d.id did,d.name dname from t_employee e
	 		left join t_department d on e.department_id=d.id
	 			<include refid="whereSql"/>
	 				order by ${sort} ${order}
	 					limit #{startIndex},#{pageSize}
	 </select>
	 
	 <resultMap type="Employee" id="employeeResultMap">
	 	<id property="id" column="id"/>
	 	<result property="username" column="username"/>
	 	<result property="realName" column="realName"/>
	 	<result property="password" column="password"/>
	 	<result property="tel" column="tel"/>
	 	<result property="email" column="email"/>
	 	<result property="inputTime" column="inputTime"/>
	 	<result property="state" column="state"/>
	 	<association property="department" column="department_id" javaType="Department">
	 		<id property="id" column="did"/>
	 		<result property="name" column="dname"/>
	 	</association>
	 </resultMap>
	 
	 <sql id="whereSql">
	 	<where>
	 		<!-- 普通查询 -->
	 		<if test="q!=null and q!=''">
	 			and (e.username like concat('%',#{q},'%') or e.realName like concat('%',#{q},'%')
	 				or e.tel like concat('%',#{q},'%') or e.email like concat('%',#{q},'%') 
	 					or e.id like concat('%',#{q},'%'))
	 		</if>
	 		<if test="state!=-1">
	 			and e.state=#{state}
	 		</if>
			<if test="beginDate!=null and beginDate!=''">
				and e.inputTime>=#{beginDate}
			</if>	 		
			<if test="endDate!=null and endDate!=''">
				and e.inputTime&lt;=#{endDate}
			</if>
			<!-- 高级查询 -->
			<if test="username!=null and username!=''">
				and e.username like concat('%',#{username},'%')
			</if>
			<if test="realName!=null and realName!=''">
				and e.realName like concat('%',#{realName},'%')
			</if>
			<if test="tel!=null and tel!=''">
				and e.tel like concat('%',#{tel},'%')
			</if>
			<if test="email!=null and email!=''">
				and e.email like concat('%',#{email},'%')
			</if>
			<if test="departmentId!=null and departmentId!=''">
				and e.department_id=#{departmentId}
			</if>
	 	</where>
	 </sql>
	 
	 <!-- 登录 -->
	 <select id="login" parameterType="string" resultType="Employee">
	 	select * from t_employee where username=#{username}  
	 </select>
	 <!-- 离职 -->
	 <update id="leave" parameterType="long">
	 	update t_employee set state=0 where id=#{id}
	 </update>
</mapper> 